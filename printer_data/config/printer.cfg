# This file contains common pin mappings for the BigTreeTech Octopus
# and Octopus Pro boards. To use this config, start by identifying the
# micro-controller on the board - it may be an STM32F446, STM32F429,
# or an STM32H723.  Select the appropriate micro-controller in "make
# menuconfig" and select "Enable low-level configuration options". For
# STM32F446 boards the firmware should be compiled with a "32KiB
# bootloader" and a "12MHz crystal" clock reference. For STM32F429
# boards use a "32KiB bootloader" and an "8MHz crystal". For STM32H723
# boards use a "128KiB bootloader" and a "25Mhz crystal".

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

[include mainsail.cfg]
[include KAMP_Settings.cfg]
[include macros/*.cfg]
[include stealthchanger/homing.cfg]
[include stealthchanger/tool_detection.cfg]
[include stealthchanger/toolchanger.cfg]
[include stealthchanger/macros.cfg]
[include stealthchanger/calibrate_offsets.cfg]
[include stealthchanger/T0-AH-TZV6-G2.cfg]

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
canbus_uuid: 5b16d52281f8

[exclude_object]
[save_variables]

[gcode_arcs]
resolution: 0.2

[rounded_path]
resolution: 0.2 # the length of a circle approximation segments.
replace_g0: False # Use at your own risk

[force_move]
enable_force_move: True

[input_shaper]

[respond]
default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one of the following:
#       echo: "echo: " #(This is the default)
#       command: "// "
#       error: "!! "
#default_prefix: echo:
#   Directly sets the default prefix. If present, this value will override the "default_type"

[shaketune]
# result_folder: ~/printer_data/config/ShakeTune_results
#    Path where the processed results will be stored. If the folder doesn't exist,
#    it will be automatically created. You can change this if you'd like to store 
#    results in a different location.
# number_of_results_to_keep: 10
#    This setting defines how many results you want to keep in the result folder.
#    Once the specified number is exceeded, older results will be automatically deleted
#    to free up space on the SD card and avoid cluttering the results folder.
# keep_raw_data: False
#    If set to True, Shake&Tune will store both the processed graphs and the raw accelerometer
#    .stdata files in the results folder. This can be useful for debugging or archiving purposes.
#    Please always attach them when reporting any issues on GitHub or Discord.
# show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for system commands (macros that are not part
#    of the printer.cfg file). This option allow Shake&Tune to inject them into the webui at runtime.
#    If set to False, the macros will be hidden but still accessible from the console by typing
#    their names manually, which can be useful if you prefer to encapsulate them into your own macros.
# timeout: 600
#    This defines the maximum processing time (in seconds) to allows to Shake&Tune for generating 
#    graphs from a .stdata file. 10 minutes should be more than enough in most cases, but if you have
#    slower hardware (e.g., older SD cards or low-performance devices), increase it to prevent timeouts.
# measurements_chunk_size: 2
#    Each Shake&Tune command uses the accelerometer to take multiple measurements. By default,
#    Shake&Tune will write a chunk of data to disk every two measurements, and at the end of the
#    command will merge these chunks into the final .stdata file for processing. "2" is a very
#    conservative setting to avoid Klipper Timer Too Close errors on lower end devices with little
#    RAM, and should work for everyone. However, if you are using a powerful computer, you may
#    wish to increase this value to keep more measurements in memory (e.g., 15-20) before writing
#    the chunk and avoid stressing the filesystem too much.
# max_freq: 200
#    This setting defines the maximum frequency at which the calculation of the power spectral density
#    is cutoff. The default value should be fine for most machines and accelerometer combinations and
#    avoid touching it unless you know what you're doing.
# dpi: 300
#    Controls the resolution of the generated graphs. The default value of 300 dpi was optimized
#    and strikes a balance between performance and readability, ensuring that graphs are clear
#    without using too much RAM to generate them. Usually, you shouldn't need to change this value.

[printer]
kinematics: corexy
max_velocity: 400  
max_accel: 10000             #Max 4000
max_z_velocity: 50          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 200 for 1.8 degree stepper
endstop_pin: PG6
position_min: 0
position_endstop: 350
position_max: 350
homing_speed: 100   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc5160 stepper_x]
cs_pin: PC4
spi_bus: spi4
interpolate: true
run_current: 1.5  #0.85
sense_resistor: 0.075
#stealthchop_threshold: 0

# [autotune_tmc stepper_x]
# motor: ldo-42sth48-2004mah

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 200 for 1.8 degree stepper
endstop_pin: PG9
position_min: 0
position_endstop: 354
position_max: 354
homing_speed: 100  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc5160 stepper_y]
cs_pin: PD11
spi_bus: spi4
interpolate: true
run_current: 1.5  #0.85
sense_resistor: 0.075
#stealthchop_threshold: 0

# [autotune_tmc stepper_y]
# motor: ldo-42sth48-2004mah
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
endstop_pin: probe:z_virtual_endstop  #TAP
position_max: 315
position_min: -5
homing_speed: 15
second_homing_speed: 5
homing_retract_dist: 5

[tmc2209 stepper_z]
uart_pin: PC6
interpolate: true
run_current: 0.85
sense_resistor: 0.110
#stealthchop_threshold: 0   #999999

# [autotune_tmc stepper_z]
# motor: ldo-42sth48-2004ac

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: true
run_current: 0.85
sense_resistor: 0.110
#stealthchop_threshold: 0   #999999

# [autotune_tmc stepper_z1]
# motor: ldo-42sth48-2004ac

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: true
run_current: 0.85
sense_resistor: 0.110
#stealthchop_threshold: 0   #999999

# [autotune_tmc stepper_z2]
# motor: ldo-42sth48-2004ac

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: true
run_current: 0.85
sense_resistor: 0.110
#stealthchop_threshold: 0   #999999

# [autotune_tmc stepper_z3]
# motor: ldo-42sth48-2004ac

#####################################################################
#   Extruder
#####################################################################

## Included in each toolhead configuration

#####################################################################
#   Bed Heater
#####################################################################


##  SSR Pin - HE0
##  Thermistor - TB
[heater_bed]
heater_pin: PA2
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: PF3
max_power: 0.75
min_temp: 0
max_temp: 120
pwm_cycle_time: 0.0166
control: pid
pid_kp: 58.437
pid_ki: 2.347
pid_kd: 363.769

#####################################################################
#   Probe
#####################################################################

[probe]
##  TAP
pin: EBB36: PB8
x_offset: 0
y_offset: 0
#z_offset: 0
speed: 10     ;default 5
samples: 3   ;default 3
samples_result: median
sample_retract_dist: 2.0
samples_tolerance: 0.006
samples_tolerance_retries: 10

activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

#####################################################################
#   Fan Control
#####################################################################

##  Controller fan - FAN2
[controller_fan controller_fan]
pin: PA8
kick_start_time: 0.5
heater: heater_bed
fan_speed: 0.3

#####################################################################
#   LED Control
#####################################################################

## Chamber Lighting - CNC_FAN5
[output_pin caselight]
pin: PD13
pwm:true
shutdown_value: 0
value:0
cycle_time: 0.01

#####################################################################
#   Additional Sensors
#####################################################################

[temperature_sensor chamber_temp]
## Chamber Temperature - T1
sensor_type: Generic 3950
sensor_pin: PF4
min_temp: 0
max_temp: 100
gcode_id: chamber_th

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor Octopus_Pro_MCU]
sensor_type: temperature_mcu
min_temp: 10
max_temp: 100

[temperature_sensor EBB36_MCU]
sensor_type: temperature_mcu
sensor_mcu: EBBT0
min_temp: 10
max_temp: 100

# [filament_motion_sensor filament_sensor]
# detection_length: 10
# extruder: extruder
# switch_pin: ^PG11
# pause_on_runout: True
# insert_gcode:
#     M117 Insert Detected
# runout_gcode:
#     M117 Runout Detected

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 7200

[safe_z_home]
home_xy_position: 175,175
speed:100
z_hop:10

[quad_gantry_level]
##  Gantry Corners for 350mm Build
gantry_corners:
  -60,-10
  410,420
##  Probe points
points:
  50,50
  50,300
  300,300
  300,50
speed: 200
horizontal_move_z: 15
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

[bed_mesh]
speed: 200
horizontal_move_z: 15
mesh_min: 25,25
mesh_max: 325,325
probe_count: 9,9
mesh_pps: 2,2
algorithm: bicubic
bicubic_tension: 0.2
fade_start: 0.6
fade_end: 10
fade_target: 0


